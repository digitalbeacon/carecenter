<viewdata model="EditModel" />

<content name="header">${Model.Heading}</content>

<var panelId="'clientEditPanel'" />

<div id="clientEditContainer" class="multi-col">
	<sbFormPanel supportFileInput="true" enableDelete="!Model.IsNew && Model.CanDelete">
		<div id="col1" class="col">
			<sbFormRow property="P(m => m.FirstName)" focus="true" />
			<sbFormRow property="P(m => m.LastName)" />
			<sbFormRow property="P(m => m.MiddleName)" />
			<sbFormRow property="P(m => m.RaceId)" />
			<sbFormRow property="P(m => m.GenderId)" includeEmptyOption="false" />
			<sbFormRow property="P(m => m.Line1)" />
			<!--<sbFormRow property="P(m => m.Line2)" />-->
			<sbFormRow property="P(m => m.PostalCode)" mask="WebConstants.UsaPostalCodeMask" />
			<sbFormRow property="P(m => m.City)" />
			<sbFormRow property="P(m => m.StateId)" includeEmptyOption="true" />
			<sbFormRow property="P(m => m.County)" />
			<sbFormRow property="P(m => m.DefaultPhoneId)" includeEmptyOption="true" />
			<sbFormRow property="P(m => m.MobilePhone)" mask="WebConstants.PhoneMask" />
			<sbFormRow property="P(m => m.HomePhone)" mask="WebConstants.PhoneMask" />
			<sbFormRow property="P(m => m.WorkPhone)" mask="WebConstants.PhoneMask" />
			<sbFormRow property="P(m => m.Email)" />
			<sbFormRow property="P(m => m.Photo)" inputType="file" inputSize="13" />
			<sbFormRow inputType="submit" />
			<content name="readyScript" if="RenderPartial">
				$('#deletePhoto').click(function() {
					if (confirm($.sb.localization.confirmText)) {
						$('#${panelId}').data('sbFormPanel').action('${Url.Action("deletePhoto")}');
					}
					return false;
				});
			</content>
		</div>
		<div id="col2" class="col">
			<sbFormRow property="P(m => m.DateOfBirth)" />
			<sbFormRow property="P(m => m.Age)" inputType="textBox" maxLength="3" />
			<sbFormRow property="P(m => m.UniqueId)" />
			<sbFormRow property="P(m => m.LastFourSsn)" mask="'9999'" helpText="'Clients.LastFourSsn.HelpText'" />
			<sbFormRow property="P(m => m.Ssn)" mask="WebConstants.SsnMask" label="'Common.Ssn.Label.Short'" />
			<sbFormRow property="P(m => m.HouseholdCount)" helpText="'Clients.HouseholdCount.HelpText'" />
			<sbFormRow property="P(m => m.Bibles)" />
			<sbFormRow property="P(m => m.Repeat)" />
			<sbFormRow property="P(m => m.Inactive)" />
			<sbFormRow property="P(m => m.Flagged)" />
			<sbFormRow property="P(m => m.ClientChoice)" />
			<sbFormRow property="P(m => m.Member)" />
			<sbFormRow>${Text("Clients.Programs.Label")}</sbFormRow>
			<div class="checkBoxList">
				<sbFormRow>
					${this.CheckBox(m => m.FoodStamps).LabelAfter(Text("Clients.FoodStamps.Label"))}
					${this.CheckBox(m => m.Tanf).LabelAfter(Text("Clients.Tanf.Label"))}
					${this.CheckBox(m => m.Ssi).LabelAfter(Text("Clients.Ssi.Label"))}
				</sbFormRow>
				<sbFormRow property="P(m => m.Unemployed)" />
				<sbFormRow property="P(m => m.Elderly)" />
				<sbFormRow property="P(m => m.SelfDeclared)" />
			</div>
		</div>
	</sbFormPanel>
	<div id="col3" class="col">
		<content name="photo">
			<div class="photoContainer">
				<img src="${Model.PhotoId == 0 ? Url.Content("~/resources/images/no-photo.gif") : Url.Action("show", "files", new { id = Model.PhotoId })}" class="shadow" />
				<div class="button-panel actions script-only-block" if="RenderPartial && Model.PhotoId > 0">
					<sbActionLink text="'Common.DeletePhoto.Label'" action="'deletePhoto'" />
				</div>
			</div>
		</content>
		<content name="comments">
		   ${Html.Action("index", "clientComments", new { id = String.Empty, parentController = "clients", parentId = Model.Id })}
		</content>
		<content name="visits">
			${Html.Action("index", "visits", new { id = String.Empty, parentController = "clients", parentId = Model.Id })}
		</content>
		<content name="household">
			${Html.Action("index", "household", new { id = String.Empty, parentController = "clients", parentId = Model.Id })}
		</content>
		<% Html.Telerik().PanelBar()
			.Name("dataPanel")
			.Items(items =>
			{
				if (Model.PhotoId > 0)
				{
					items.Add().Text(Text("Clients.Photo.Label")).Expanded(true).Content(() => { Response.Write(Content["photo"]); });
				}
				items.Add().Text(Text("Comments.Plural.Label")).Expanded(true).Content(() => { Response.Write(Content["comments"]); });
				items.Add().Text(Text("Visits.Plural.Label")).Expanded(true).Content(() => { Response.Write(Content["visits"]); });
				items.Add().Text(Text("Household.Plural.Label")).Expanded(true).Content(() => { Response.Write(Content["household"]); });
			})
			.Render(); %>
		<div class="button-panel actions no-script">
			<form action="${Url.Action('deletePhoto')}" method="post" if="Model.PhotoId > 0">
				<input id="deletePhotoButton" type="submit" class="cancel" name="DeletePhoto" value="${Text('Common.DeletePhoto.Label')}" />
			</form>
		</div>
	</div>
</div>

<content name="readyScript">
	var ${panelId} = $('#${panelId}').data('sbFormPanel');
	${panelId}.deleteConfirmText = '${Text("Clients.DeleteConfirmText")}';
	${ValidationRule("Ssn", panelId, "remote", "'{0}'".FormatWith(Url.Action("ValidateSsn", "Clients", new { Id = Model.Id })), CareCenterConstants.DuplicateSsn)}
	${ValidationRule("UniqueId", panelId, "remote", "'{0}'".FormatWith(Url.Action("ValidateUniqueId", "Clients", new { Id = Model.Id })), CareCenterConstants.DuplicateUniqueId)}
	$('#Repeat', ${panelId}.element).attr('disabled', 'disabled');
	var dateOfBirth = $('#DateOfBirth', ${panelId}.element);
	var age = $('#Age', ${panelId}.element);
	dateOfBirth.bind('valueChange', function() {
		if (dateOfBirth.data('tDatePicker').value()) {
			age.val(DigitalBeacon.CareCenter.Utils.age(dateOfBirth.data('tDatePicker').value())).prop('readonly', true);
		}
		else {
			age.prop('readonly', false);
		}
	}).trigger('valueChange');
	var postalCode = $('#PostalCode', ${panelId}.element);
	postalCode.change(function() {
		if (postalCode.val() && $.trim(postalCode.val()).length == 5 && postalCode.data('last-value') != postalCode.val()) {
			postalCode.data('last-value', postalCode.val());
			$.get($.digitalbeacon.resolveUrl('~/postalCodes/' + postalCode.val() + '/json'), null, function(response) {
				if (response) {
					$('#City', ${panelId}.element).val(response.City);
					$('#StateId', ${panelId}.element).val(response.StateId);
					$('#County', ${panelId}.element).val(response.County);
				}
			});
		}
	});
	$('#Income').blur(function() {
		if ($(${panelId}.form).validate().element(this)) {
			this.value = DigitalBeacon.CareCenter.Utils.formatDecimal(DigitalBeacon.CareCenter.Utils.parseDecimal(this.value));
		}
	}).blur();
</content>