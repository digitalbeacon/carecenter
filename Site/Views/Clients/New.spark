<viewdata model="CreateModel" />

<content name="header">${Model.Heading}</content>

<!--<sbFormPanel panelId="'clientSearchPanel'" panelClass="'lookup-edit-panel'" enableBulkCreate="false">
	<sbFormRow property="P(m => m.SearchUniqueId)" label="'Clients.UniqueId.Label'" />
	<sbFormRow property="P(m => m.SearchFirstName)" label="'Common.FirstName.Label'" />
	<sbFormRow property="P(m => m.SearchLastName)" label="'Common.LastName.Label'" />
	<sbFormRow inputType="submit" customText="'Common.Search.Label'" />
</sbFormPanel>-->

<div id="clientNewContainer" class="multi-col">
	<sbFormPanel panelId="'clientEditPanel'" supportFileInput="true">
		<div id="col1" class="col">
			<sbFormRow property="P(m => m.Date)" />
			<sbFormRow property="P(m => m.LocationId)" includeEmptyOption="false" />
			<sbFormRow property="P(m => m.InterviewerId)" enableRenderContent="true">
				<img id="newInterviewer" src="~/resources/base/images/icon-plus.png" title="${Text("Common.NewEntity.Label", Text("Interviewers.Singular.Label"))}" />
			</sbFormRow>
			<sbFormRow property="P(m => m.FirstName)" />
			<sbFormRow property="P(m => m.LastName)" />
			<sbFormRow property="P(m => m.MiddleName)" />
			<sbFormRow property="P(m => m.RaceId)" />
			<sbFormRow property="P(m => m.GenderId)" />
			<sbFormRow property="P(m => m.DateOfBirth)" />
			<sbFormRow property="P(m => m.Age)" inputType="textBox" maxLength="3" />
			<sbFormRow property="P(m => m.Photo)" inputType="file" inputSize="13" />
			<sbFormRow inputType="submit" />
		</div>
		<div id="col2" class="col">
			<sbFormRow property="P(m => m.Line1)" />
			<!--<sbFormRow property="P(m => m.Line2)" />-->
			<sbFormRow property="P(m => m.PostalCode)" mask="WebConstants.UsaPostalCodeMask" />
			<sbFormRow property="P(m => m.City)" />
			<sbFormRow property="P(m => m.StateId)" includeEmptyOption="true" />
			<sbFormRow property="P(m => m.County)" />
			<sbFormRow property="P(m => m.DefaultPhoneId)" includeEmptyOption="true" />
			<sbFormRow property="P(m => m.MobilePhone)" mask="WebConstants.PhoneMask" />
			<sbFormRow property="P(m => m.HomePhone)" mask="WebConstants.PhoneMask" />
			<sbFormRow property="P(m => m.WorkPhone)" mask="WebConstants.PhoneMask" />
			<sbFormRow property="P(m => m.Email)" />
			<sbFormRow property="P(m => m.UniqueId)" />
			<sbFormRow property="P(m => m.Ssn)" mask="WebConstants.SsnMask" label="'Common.Ssn.Label.Short'" />
		</div>
		<div id="col3" class="col">
			<sbFormRow property="P(m => m.Bibles)" />
			<sbFormRow property="P(m => m.Flagged)" />
			<sbFormRow property="P(m => m.Member)" />
			<sbFormRow property="P(m => m.ClientChoice)" />
			<sbFormRow>${Text("Clients.Programs.Label")}</sbFormRow>
			<div class="checkBoxList">
				<sbFormRow>
					${this.CheckBox(m => m.FoodStamps).LabelAfter(Text("Clients.FoodStamps.Label"))}
					${this.CheckBox(m => m.Tanf).LabelAfter(Text("Clients.Tanf.Label"))}
					${this.CheckBox(m => m.Ssi).LabelAfter(Text("Clients.Ssi.Label"))}
				</sbFormRow>
				<sbFormRow property="P(m => m.Unemployed)" />
				<sbFormRow property="P(m => m.Elderly)" />
				<sbFormRow property="P(m => m.SelfDeclared)" />
			</div>
			<sbFormRow property="P(m => m.CommentType)" includeEmptyOption="false" />
			<sbFormRow property="P(m => m.Comments)" inputType="textArea" />
		</div>
	</sbFormPanel>
</div>

<content name="readyScript">
	var clientEditPanel = $('#clientEditPanel').data('sbFormPanel');
	
	${ValidationRule("Ssn", "clientEditPanel", "remote", "'{0}'".FormatWith(Url.Action("ValidateSsn", "Clients", new { Id = 0 })), CareCenterConstants.DuplicateSsn)}
	${ValidationRule("UniqueId", "clientEditPanel", "remote", "'{0}'".FormatWith(Url.Action("ValidateUniqueId", "Clients", new { Id = 0 })), CareCenterConstants.DuplicateUniqueId)}
	
	var dateOfBirth = $('#DateOfBirth', clientEditPanel.element);
	var age = $('#Age', clientEditPanel.element);
	dateOfBirth.bind('valueChange', function() {
		if (dateOfBirth.data('tDatePicker').value()) {
			age.val(DigitalBeacon.CareCenter.Utils.age(dateOfBirth.data('tDatePicker').value())).prop('readonly', true);
		}
		else {
			age.prop('readonly', false);
		}
	});
	var interviewer = $('#InterviewerId', clientEditPanel.element);
	var newInterviewer = $('#newInterviewer', clientEditPanel.element);
	newInterviewer.click(function() {
		$.sb.modalBox({
			replace: false,
			ajaxPost: $.digitalbeacon.resolveUrl('~/interviewers/new'),
			data: {
				createForVisit: true
			},
			close: function() {
				setTimeout(function() { $('#FirstName', clientEditPanel.element).focus(); }, 0);
			}
		});
		return false;
	});
	var postalCode = $('#PostalCode', clientEditPanel.element);
	postalCode.change(function() {
		if (postalCode.val() && $.trim(postalCode.val()).length == 5 && postalCode.data('last-value') != postalCode.val()) {
			postalCode.data('last-value', postalCode.val());
			$.get($.digitalbeacon.resolveUrl('~/postalCodes/' + postalCode.val() + '/json'), null, function(response) {
				if (response) {
					$('#City', clientEditPanel.element).val(response.City);
					$('#StateId', clientEditPanel.element).val(response.StateId);
					$('#County', clientEditPanel.element).val(response.County);
				}
			});
		}
	});
	$('#Income').blur(function() {
		if ($(clientEditPanel.form).validate().element(this)) {
			this.value = DigitalBeacon.CareCenter.Utils.formatDecimal(DigitalBeacon.CareCenter.Utils.parseDecimal(this.value));
		}
	}).blur();
</content>